# $Id: CMakeLists.txt 332 2013-04-03 14:24:08Z roland_schwarz $
# This is the CMake project file for the libe57 reference implementation
#
# Copyright 2010-2012 Roland Schwarz, Riegl LMS GmbH
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
# Requirements:
#     Xerces library: http://xerces.apache.org/
# Notes:
#     Since there is not standard cmake module to find the xerces library
#     we provide one with this distribution. It should be able to find
#     the library from the XERCES_ROOT cmake variable. Standard layout, as
#     with the binary packages from apache is assumed.
# If you find any errors or have suggestion to improve the build script:
# patches are most welcome! Please send them to the development mailing list.


cmake_minimum_required(VERSION 3.1.0 FATAL_ERROR)

# Use c++11
set(CMAKE_CXX_STANDARD 11)

# Set a private module find path
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

project(E57Format)

# developer adjustable version numbers
set(${PROJECT_NAME}_MAJOR_VERSION 2)
set(${PROJECT_NAME}_MINOR_VERSION 0)

# Create revision ID
include(Tags)
add_definitions(-DREVISION_ID="${PROJECT_NAME}-${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}-${${PROJECT_NAME}_BUILD_TAG}")


# Use boost
find_package(Threads REQUIRED)

# Use xerces
find_package(XercesC REQUIRED)
set(XML_LIBRARIES ${XercesC_LIBRARY})
set(XML_INCLUDE_DIRS ${XercesC_INCLUDE_DIR})

# Use ICU
if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    add_definitions(-DLINUX)
    find_package(ICU REQUIRED)
    set(XML_LIBRARIES ${XML_LIBRARIES} ${ICU_LIBRARIES})
    set(XML_INCLUDE_DIRS ${XML_INCLUDE_DIRS} ${ICU_INCLUDE_DIRS})
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
    add_definitions(-DMACOS)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
    add_definitions(-DWINDOWS)
endif()

# Include directories
include_directories(
    ${PROJECT_BINARY_DIR}/include
    include
    src/
    ${XML_INCLUDE_DIRS}
)

# CRCpp from here: https://github.com/d-bahr/CRCpp
add_definitions( -DCRCPP_USE_CPP11 )
add_definitions( -DCRCPP_BRANCHLESS )
include_directories( contrib/CRCpp/inc )

#
# The reference implementation
#

add_library( E57Format SHARED
    src/CheckedFile.cpp
    src/Decoder.cpp
    src/Encoder.cpp
    src/E57Foundation.cpp
    src/E57FoundationImpl.cpp
    src/E57XmlParser.cpp
)

#
# Install section
#

install(
    TARGETS
        E57Format
    LIBRARY DESTINATION lib
)

install(
    FILES
        include/E57Foundation.h
    DESTINATION include/E57Format
)

install(
    FILES
        cmake/E57FormatConfig.cmake
    DESTINATION share/E57Format/
)
